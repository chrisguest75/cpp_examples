#!/usr/bin/env just --justfile
# ^ A shebang isn't required, but allows a justfile to be executed
#   like a script, with `./justfile test`, for example.

set dotenv-load := true

# default lists actions
default:
  @just -f justfile --list

create:
  #!/usr/bin/env bash
  set -eufo pipefail
  # create make
  conan profile detect
  conan profile list
  conan profile show 
  conan install . --output-folder=build --build=missing

build:
  #!/usr/bin/env bash
  set -eufo pipefail
  # build target
  cd build
  cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
  cmake --build .

run *args: build
  #!/usr/bin/env bash
  set -eufo pipefail
  # run 
  ./build/crasher {{ args }}

clean:
  # cleanup
  cmake --build ./build --target clean

build_docker:
  #!/usr/bin/env bash
  set -eufo pipefail
  docker build -f Dockerfile.build -t 11_crasher . 
  
start_docker: build_docker
  #!/usr/bin/env bash
  set -eufo pipefail  
  docker run --rm --name 11_crasher -it 11_crasher

shell_docker: build_docker
  #!/usr/bin/env bash
  set -eufo pipefail  
  docker run --rm --name 11_crasher -it --entrypoint /bin/bash 11_crasher
